1. Создать файл file1 и наполнить его произвольным содержимым. Скопировать его в file2.
Создать символическую ссылку file3 на file1. Создать жёсткую ссылку file4 на file1. 
Посмотреть, какие inode у файлов. Удалить file1. Что стало с остальными созданными 
файлами? Попробовать вывести их на экран.
===Создаем файл1 и копируем в файл2======
$ echo "Task 1" >> file1.txt
$ cpy file1.txt file2.txt
===Создаем символическую ссылку файл3 на файл1===
$ ln -s file1.txt file3.txt
===Создаем жесткую ссылку файл4 на файл1===
$ ln file1.txt file4.txt
===Удалим файл1===
$ rm file1.txt
===Выведем сведения о файлах и inode====
$ ls -i -l
===Файлы 2 и 4 не изменились так как были копиями файла 1. Файл4 сохранил inode файла1 и
после удаления убавил счетчик ссылок с 2-х до 1-го. inode файла2 при создании был иным от файла1
и после его удаления остался неизменным.
Файл3, в свою очередь, теперь ссылается на удаленный файл в связи с чем при его открытии
появляется ошибка.

-----------------------------------------------------------------
2. Дать созданным файлам другие, произвольные имена. Создать новую символическую ссылку. 
Переместить ссылки в другую директорию.
$ mv file2.txt file5.txt
$ ln -s file5.txt file5-l.txt
$ mv file5-l.txt dir/
===Перемещенная ссылка более не работает так как в новой директории нет file5.txt.
Если такой файл создать, ссылка будет работать на такой файл.

-----------------------------------------------------------------
3. Создать два произвольных файла. Первому присвоить права на чтение и запись для 
владельца и группы, только на чтение — для всех. Второму присвоить права на чтение и 
запись только для владельца. Сделать это в численном и символьном виде.
$ echo "Sample" >> file1.txt
$ echo "Sample" >> file2.txt
===Настройка прав в численном виде===
$ chmod 664 file1.txt
$ chmod 600 file2.txt
===Настройка прав в буквенном виде===
$ chmod ug=rw file1.txt
$ chmod o=r file1.txt
$ chmod u=rw file2.txt
$ chmod go= file2.txt

-----------------------------------------------------------------
5. * Создать группу developer и нескольких пользователей, входящих в неё. 
Создать директорию для совместной работы. Сделать так, чтобы созданные одними 
пользователями файлы могли изменять другие пользователи этой группы.
===Создаем пользователей и группу===
$ sudo groupadd developer
$ sudo useradd dev1 -g developer
$ sudo useradd dev2 -g developer
===Создаем папку и устанавливаем владельца и группу
$ sudo chown dev1 Project
$ sudo chgrp developer Project
===Добавляем SGID к папке и права для пользователя и группы===
$ sudo chmod 2770 Project
===Теперь при создании файлов в папке, группа будет определена как developer===

------------------------------------------------------------------
6. * Создать в директории для совместной работы поддиректорию для обмена файлами, 
но чтобы удалять файлы могли только их создатели.
===В папке Project создаем папку temp===
$ mkdir temp
===Добавляем бит sticky===
$ sudo chmod 1770 temp

------------------------------------------------------------------
7. * Создать директорию, в которой есть несколько файлов. Сделать так, чтобы 
открыть файлы можно было, только зная имя файла, а через ls список файлов посмотреть 
было нельзя.
===Убраем из прав папки права на чтения===
$ chmod 555 Project_2
Теперь в папке ни у кого нет доступа к "чтению" папки, что означает отказ команде ls
прочесть список имеющихся файлов в ней.
